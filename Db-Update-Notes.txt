Properties-->Extended Attributes -->
   Table prefix like EMTSM etc. (s column names)
   TableSests  like "ANKAFIX" "Valuesets" etc. to group the tables by creating schema.
               For example the "ankafix" tables are updated/created only for ankafix tenant.
      is references in  /de.kisters.belvis.db/generate-sources.xml


Primary keys, Alternate keys in the according tab pages 
Unique -Indexes int table "properties".
Comment for new table and each column

Foreignkeys, integrity rule "delete cascade": references --> references at the end of table list.
create the reference defining the parent and child table (optional integrity rule).



After saving the PDM do not "mvn install" the belvis.db because , adapt the dbmodel.properties before

Adapting the dbmodel.properties (for <modul>schema.version AND all.schema.version)
Adapt the DBMigrationPlan (2 places! for referenced modules)
belvis.db  --> mvn install 

After the mvn install :
 Check if there are exception in console output! (even if the status SUCCESSFULL)
(2 new XMLs should be created)
  dbMDMSchema_9_01_storage.xml
  dbMDMSchema_9_01.xml

to create the migration classes  with the steps--> call the according menu point. (main menu)
   mdm --> ok --> 9_00 -->ok -->9_01
   de.kisters.belvis.db.mdm.migration
             the MDMDbSchemaMig9_00to9_01.javX appears
Problems:  no steps with new tables?  Check the TableSet and TablePrefix in extended attributes.			 


   The created java class is commented, so activate the code and evt. set the default value for NOT NULL column.
   *.javX rename to *.java
   replace the  //:  with ""  to remove the comments 
   Don' forget to internalize strings!  //$NON-NLS-1$
   Adapt the JavaDoc comment with update description, author with <br>
   Set case annotation:  @KistersBugzilla(141424)
   remove "//eof"


 ----------Migration path : 2 Branches = 3 Migrations:---------------
 Example: 4.7  ankafix 4_12 --> 4_13
          4.8  ankafix 5_06 --> 5_07 (the same changes like 4_12-->4_13)
		  
		  to allow the migration from 4.7 to 4.8  (4_13 --> 5_07) :
		    2 files (dbAnkafixSchema_4_13_storage.xml and dbAnkafixSchema_4_13.xml) should be manually copied from 4.7 to according 4.8 directory!
			             C:\scm\git\4-8-x\belvisrepo\belvis\base\server\de.kisters.belvis.db\src\main\resources\xml\schema\ankafix
						 
			the PDM in 4.8 should be modified to get the same changes like  4.7	 (manually)
			modify MigrationPlan with tree nodes
			   5_07
			   / \
			  /  4_13
			5_06 
			 |
			5_05 
			then migrate : ankafix --> 5_06 --> 5_07
			               ankafix --> 4_13 --> 5_07
						   
------ GIT to bring dummy commit from 4.8 to 4.9.010 AND 4.9.x if the changes in 4.9 are done with another commit-------
$ git checkout Br_4_9_10
$ git fetch repo48 case12345_48_dbupdate_branch:case12345_48_dbupdate_branch
#and now to merge conflicts by maintaining only the changes from new 4.9. commit
$ git merge -s ours case12345_48_dbupdate_branch
$ git checkout Br_4_9_x

#now merge the 4_9_10 to 4_9_x
git merge Br_4_9_010 -s ours

 
 ---------- Content(common):---------------

The DBMigrSchema calls DBContentMigration (the same name pattern)
MDMDbSchemaMig8_02to8_03  should call in one extra step the --> MDMDbContentMig8_02to8_03 (has to be created manually!)
This step (in SchemaMig) should be placed before the last step of toSchema.createAllFkConstraints()


The gaps in the update path of ContentMigrations are allowed:
So if the last step is MDMDbSchemaMig9_00to9_01
and the last step in content migration is MDMDbContentMig8_02to8_03  it is sufficient to create the
new one according only to current schema migration -->
MDMDbContentMig8_02to8_03  
MDMDbContentMig9_00to9_01



Create the migration java class (i.e. use as template some of classes in  
         de.kisters.belvis.db.common.migration.content)
that will be calling the SQL script placed in /de.kisters.belvis.db/src/main/resources/sql
i.e. case48735.sql

-------------------------  Reset the update result ----------------------------
To use the same tenant for next update, try to reset the changes and set the db version manually.
So, delete the created table/new column with constraints and set the SYSTEMPARAM_BELVIS.SPABELVIS_KEY --> DbSchemaVersion (5_06 --> 5_05)
s. the screenshot or 
   http://confluence.kisters.de/pages/viewpage.action?pageId=19113376#Troubleshooting%28B4%29-Howtoreseterrorstateofanapplication-dbinTSM

------------------------- Add NOTNULL column to existing table---------
search for:  ".ColumnNotNull +"
s. AnkafixDbSchemaMig3_13to4_07   --> column: eampc_ats_assigned_ts
in the step the 
// part 2 table: e_af_mp_pricecalc
            if (doExecute) {
                dbh.sqlExecNoResult("update e_af_mp_pricecalc set eampc_ats_assigned_ts=eampc_mp_assigned_ts"); //$NON-NLS-1$
                dbh.commit();
            } else {
                rtn += "update e_af_mp_pricecalc set eampc_ats_assigned_ts=eampc_mp_assigned_ts;\n"; //$NON-NLS-1$
            }

--------------------------   BRANCHING,  VERSIONING ----------
example for belvisrepo 4.8:

 "gitk 2eb563a"  --> to see the changes made in the code.
    
	{case 139779, 140080, 140081} add valueset- tables for reading schedules    
    - add valueset- tables e_vs_readschedule_map, e_vs_readschedule_prf, e_vs_readschedule
    - add column for each meteringpoint table to save a reading schedule profile
    - add column EVSSP_DECIMALPLACES_I at E_VS_SPECIFICATION (default value 3).
    - TestSpecificationDAO deactivated

 If 4.7 is changed and 4.8 still not modified --> OK just make the changes in the PDM again for 4.8
 If 4.8 already extended --> S. developer handbook chapter 43. Shema creation migration.
 

DbMigrationPlan.java for all products!
	4.7        -->       4.8
 8.04 -> 8.05        9.00 --> 9.01
      \
	 8.04      -->   9.01  

---------------  VIDEO ----------------------------
   12:00   dbmodel.properties
   25:21   workflow beginn
   29:49 edit the DBSchemaMig wiht comments, author, buglzilla Link

	 
	 Video:
New Table
New Columns
Foreign Key
Migration
Content Migration

----------------------------------------------- TIPPS-------------------------------------------------------------------------
Table should be modified after the review : it means the last dbAnkafixSchema_5_06.xml
                                                       dbAnkafixSchema_5_06_storage.xml  
   should be deleted (evt. all other referenced modules) and the de.kisters.belvis.db --> mvn install to create the new ones.!													   
 

--------------------  Create first the  Key and then Unique! Index (referencing the key) ----------------
Man muss erst einen Key erstellen, dem man die Spalten hinzufuegt. Anschliessend kann man einen Unique Index erstellen und  dann dort Irgendwo in den Registerkarten den zuvor definierten Key auswaehlen. Bingo

To Create the user def. index on an FK do not use the keys, just add the colum directly to the new index.
preview should be
create index EMETAV_CMPNY_IDX on E_METER_AV (
   EVSBS_COMPANY_ID_L ASC
);
-----------------------------------------------ERROR:   The table is in the PDM but is not generated (f.e.  E_TS_MISSING)-----
 check the de.kisters.belvis.db  console output even if the SUCCESSFULL:
 
 Exception in thread "main" org.xml.sax.SAXParseException; systemId: file:/C:/scm/git/4-8-x/belvisrepo/belvis/base/server/de.kisters.belvis.db/src/main/resources/xml/schema/ankafix/dbAnkafixSchema_5_19.xml; lineNumber: 1523; columnNumber: 13; The content of element type "Index" is incomplete, it must match "(ColumnRef+,Description?)".
 
 Because of this message the tabe is skipped and not not created 